<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>一些常用的 Linux 命令</title>
    <link href="/2018/08/17/Linux/%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8%E7%9A%84-Linux-%E5%91%BD%E4%BB%A4/"/>
    <url>/2018/08/17/Linux/%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8%E7%9A%84-Linux-%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><p><a name="niyyB"></a></p><h1 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h1><p><a name="xa1O0"></a></p><h2 id="1-1-目录含义"><a href="#1-1-目录含义" class="headerlink" title="1.1 目录含义"></a>1.1 目录含义</h2><p>Linux 各个目录的含义：<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/22879930/1653666743298-cee648bd-150b-4ed4-9bd8-08c990663b6d.png#clientId=uadd86808-607a-4&crop=0&crop=0&crop=1&crop=1&from=ui&id=ue396429c&margin=%5Bobject%20Object%5D&name=linux_dir1.PNG&originHeight=270&originWidth=500&originalType=binary&ratio=1&rotation=0&showTitle=false&size=123385&status=done&style=none&taskId=u446e369f-d8a2-440b-bbf1-e600eb968e2&title=" alt="linux_dir1.PNG"><img src="https://cdn.nlark.com/yuque/0/2022/png/22879930/1653666743331-3f6a0c11-6616-45e6-87cf-e6ab0b753b08.png#clientId=uadd86808-607a-4&crop=0&crop=0&crop=1&crop=1&from=ui&id=ue129712d&margin=%5Bobject%20Object%5D&name=linux_dir2.PNG&originHeight=284&originWidth=500&originalType=binary&ratio=1&rotation=0&showTitle=false&size=161278&status=done&style=none&taskId=ua9bbd3c0-9ba9-4839-9305-2671294c437&title=" alt="linux_dir2.PNG"><img src="https://cdn.nlark.com/yuque/0/2022/png/22879930/1653666743344-ac841cf3-4bd3-4fee-91b1-02827da43db6.png#clientId=uadd86808-607a-4&crop=0&crop=0&crop=1&crop=1&from=ui&id=uc3e4baea&margin=%5Bobject%20Object%5D&name=linux_dir3.PNG&originHeight=315&originWidth=500&originalType=binary&ratio=1&rotation=0&showTitle=false&size=143393&status=done&style=none&taskId=ub046106c-8325-46a6-af6c-ebbc2d2f2f4&title=" alt="linux_dir3.PNG"><br><a name="h1QCd"></a></p><h2 id="1-2-命令规则"><a href="#1-2-命令规则" class="headerlink" title="1.2 命令规则"></a>1.2 命令规则</h2><p>命令格式：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">命令 [-选项] [参数]<br>举例： ls -la /etc<br></code></pre></td></tr></table></figure><p>简化选项与完整选项：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">-a 等于 --all<br>简化选项：- 加 简化字母<br>完整选项：-- 加 完整字母<br></code></pre></td></tr></table></figure><p><a name="V0eu6"></a></p><h1 id="2-文件管理"><a href="#2-文件管理" class="headerlink" title="2. 文件管理"></a>2. 文件管理</h1><p><a name="ASaji"></a></p><h2 id="2-1-ls"><a href="#2-1-ls" class="headerlink" title="2.1 ls"></a>2.1 ls</h2><p>作用：列出所有的文件和目录<br />常用选项：<br />-a 显示所有文件，包括隐藏文件<br />-l 显示详细信息<br />-d 查看目录属性（只查看这个目录，而不查看目录下的文件信息）<br />-h 更友好的显示，例如 ls -lh，文件大小会帮你换算为K<br />-i 查看文件的节点序号（相当于id号，linux中任何文件或目录都有唯一标识的id号，便于系统管理）<br />举例：<br />输入<code>ls -l</code>，结果：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">-rw-rw-r--. 1 zhangchao zhangchao   22 Feb  6 20:17 hh<br></code></pre></td></tr></table></figure><p>依次表示的信息是：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs css">- 开头代表一个文件，d 开头代表是一个目录，l开头代表一个软链接<br>rw-rw-r--. 代表权限信息，<span class="hljs-number">3</span>个一拆分，<span class="hljs-selector-attr">[rw-]</span>、<span class="hljs-selector-attr">[rw-]</span>和<span class="hljs-selector-attr">[r--]</span>，分别是所有者，所属组，其他人的权限<br><span class="hljs-number">1</span> 代表调用次数<br>后面两个用户代表：所有者，所有组<br>文件大小<br>最后一次修改时间/创建时间<br>文件名<br></code></pre></td></tr></table></figure><p>关于linux的权限的小知识：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell">u 所有者<br>g 所有组<br>o 其他人<br>r 读<br>w 写<br>x 执行<br><br>-rw-rw-r--. 的意思是<br>-：这是一个文件<br>rw-：它的所有者有读写权限<br>rw-：它的所有组有读写权限<br>r--：其他人有读权限<br></code></pre></td></tr></table></figure><p><a name="TEWng"></a></p><h2 id="2-2-mkdir"><a href="#2-2-mkdir" class="headerlink" title="2.2 mkdir"></a>2.2 mkdir</h2><p>作用：创建一个目录<br />如果我要创建&#x2F;a&#x2F;b&#x2F;c目录，本身a目录是不存在的，即如何递归创建？<br /><code>mkdir -p</code>即可递归创建。<br />创建目录可以同时创建多个目录，用空格隔开。</p><p>有关的小命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd 切换到某个目录（基础之基础）<br>pwd 显示当前目录的完整路径（现在cd的是哪个目录？）<br>rmdir 删除空目录（只能删除空目录）<br></code></pre></td></tr></table></figure><p><a name="BD4kK"></a></p><h2 id="2-3-cp"><a href="#2-3-cp" class="headerlink" title="2.3 cp"></a>2.3 cp</h2><p>作用：原意copy，即文件的复制。可以复制多个文件，复制的同时可以给文件重命名。<br />用法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">cp [原文件] [新的位置]<br>cp -r 复制目录<br>cp -p 保留原文件的属性<br></code></pre></td></tr></table></figure><p><a name="DRQAE"></a></p><h2 id="2-4-mv"><a href="#2-4-mv" class="headerlink" title="2.4 mv"></a>2.4 mv</h2><p>作用：移动&#x2F;剪切文件或目录（不需要加<code>-r</code>），文件的重命名。<br />用法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">mv [原文件] [新的位置]<br>mv [原文件] [新名字]<br></code></pre></td></tr></table></figure><p><a name="rbRzA"></a></p><h2 id="2-5-rm"><a href="#2-5-rm" class="headerlink" title="2.5 rm"></a>2.5 rm</h2><p>作用：删除一个文件、目录。<br />用法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">rm [文件]<br>rm -r [目录]<br>-f 强制执行<br>rm -rf [目录] 递归的删除目录和目录里面的所有<br></code></pre></td></tr></table></figure><p>如果一不小心<code>rm -rf /</code>，就gg了。<br><a name="PUmXI"></a></p><h2 id="2-6-find"><a href="#2-6-find" class="headerlink" title="2.6 find"></a>2.6 find</h2><p>文件搜索命令（windows下文件搜索工具everything）<br />基本语法：<code>find [搜索范围] [匹配条件]</code><br /><code>find /home -name xxx</code>：根据名字搜索<br />如何模糊搜索？利用通配符，*匹配任意字符，?匹配单个字符，举例：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">find /home -name *xxx*  （查找多个值需要&quot;*xxx*&quot;，双引号引起来）<br></code></pre></td></tr></table></figure><p><code>find /home -iname xxx</code>：不区分大小写搜索<br />如何按文件大小来筛选？（+代表大于，-代表小于，否则等于），举例：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">find /home -size +204800  （查找大于100MB的数据，注意数据格式为数据块，1数据块=512B=0.5KB）<br></code></pre></td></tr></table></figure><p><code>find /home -user zhangchao</code>：按用户来查找，同理用户组为<code>-group</code><br><a name="QnJge"></a></p><h3 id="2-6-1-高级查找"><a href="#2-6-1-高级查找" class="headerlink" title="2.6.1 高级查找"></a>2.6.1 高级查找</h3><p><code>find /home -cmin -5</code>：在home目录下查找5分钟内被修改过属性的文件和目录，参数：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">-amin 访问时间<br>-cmin 文件属性<br>-mmin 文件内容<br></code></pre></td></tr></table></figure><p><code>find /home -size +163840 -a -size -204800</code>：查找文件大于80MB小于100MB的文件，参数：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">-a 表示两个条件同时满足，记作and<br>-o 表示满足任意一个条件即可，记作or<br></code></pre></td></tr></table></figure><p>如何根据类型查找？<br /><code>-type</code>根据文件类型查找，其中：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">f：文件<br>d：目录<br>l：软链接<br></code></pre></td></tr></table></figure><p>如何对查找出来的结果做进一步的操作？<br /><code>find /home -name xxx -exec ls -l &#123;&#125; \;</code>：对查找出来的结果进行批量的ls -l操作，其中后面的<code>[-exec ls -l &#123;&#125; \;]</code>是一个固定的格式<code>-exec</code>可以用<code>-ok</code>代替，只是每个文件都要询问一下。<br />根据i节点查找？举例：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">找到当前目录下，i节点为12345的文件并删掉它<br>find . -inum 12345 -exec rm &#123;&#125; \;<br></code></pre></td></tr></table></figure><p><a name="TDMua"></a></p><h2 id="2-7-locate"><a href="#2-7-locate" class="headerlink" title="2.7 locate"></a>2.7 locate</h2><p><code>find</code>命令需要遍历查找文件夹，浪费大量资源，如何高效查找？<br /><code>locate</code>命令在文件库中查找文件，不在硬盘中查找，所以速度很快，语法<code>locate [文件名]</code><br />如果一个文件新建不久，资料库中没有，就无法找到<br />可以使用命令<code>updatedb</code>更新资料库，<code>不会</code>更新系统的<code>/tmp</code>文件夹中的内容<br /><code>locate -i [文件名]</code>：不区分大小写的搜寻<br><a name="iWCte"></a></p><h2 id="2-8-which"><a href="#2-8-which" class="headerlink" title="2.8 which"></a>2.8 which</h2><p>特殊查找，查找命令在哪个文件夹。<br />语法：<code>which [命令名]</code><br />例如：<code>which ls</code><br />除了显示命令的地址所在，还可以显示命令的别名。例如普通的<code>ls</code>可以显示文件、文件夹的颜色，其实<code>ls</code>是<code>ls --color</code>的别名，如果要执行底层的<code>ls</code>，可以用<code>\ls</code><br><a name="Fz7Xc"></a></p><h2 id="2-9-whereis"><a href="#2-9-whereis" class="headerlink" title="2.9 whereis"></a>2.9 whereis</h2><p>语法：<code>whereis [命令名]</code><br />和<code>which</code>功能一样，<code>whereis</code>还可以查到该命令的帮助文档所在地址<br><a name="vmS0o"></a></p><h2 id="2-10-grep"><a href="#2-10-grep" class="headerlink" title="2.10 grep"></a>2.10 grep</h2><p>查找某个确定文件中是否有某某关键字。<br />语法：<code>grep [指定匹配字符串] [文件名]</code>，参数：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">-i：不区分大小写<br>-v：排除指定字符串<br></code></pre></td></tr></table></figure><p>例：<br /><code>grep -v ^# /xxx.txt</code>：排除#开头的内容<br><a name="pKyUk"></a></p><h2 id="2-11-man"><a href="#2-11-man" class="headerlink" title="2.11 man"></a>2.11 man</h2><p>查看指定命令的帮助手册<br />语法：<code>man [命令名]</code><br />例如：<code>man ls</code><br />如果直接查看配置文件信息，可以<code>man [配置文件名]</code><br />例如：<code>man services</code></p><blockquote><p>小知识，帮助文档的<code>文件名</code>中含有<code>1</code>代表命令的帮助，<code>5</code>代表配置文件的帮助</p></blockquote><p>其他查看帮助信息的命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">whatis [命令名]<br>apropos [配置文件名]<br></code></pre></td></tr></table></figure><p>还有命令加上 –help，查看帮助<br />例如<code>ls --help</code><br />注意：内置shell命令（例如<code>cd</code>）无法<code>man</code>，<code>which</code>等，这时查看帮助可以用<code>help [命令名]</code><br />例如：<code>help cd</code><br><a name="Ca24t"></a></p><h2 id="2-12-压缩-amp-解压"><a href="#2-12-压缩-amp-解压" class="headerlink" title="2.12 压缩&amp;解压"></a>2.12 压缩&amp;解压</h2><p><a name="bQJni"></a></p><h3 id="2-12-1-gzip"><a href="#2-12-1-gzip" class="headerlink" title="2.12.1 gzip"></a>2.12.1 gzip</h3><p>压缩成<code>.gz</code>格式的压缩包<br />语法：<code>gzip [文件名]</code>，生成<code>.gz</code>压缩文件<br />解压缩：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">gunzip [压缩文件]<br>gzip -d [压缩文件]<br></code></pre></td></tr></table></figure><p>这种方法压缩，解压后，<code>不保留原文件</code>；<code>只能压缩文件，不能压缩目录</code><br><a name="pLjVR"></a></p><h3 id="2-12-2-tar"><a href="#2-12-2-tar" class="headerlink" title="2.12.2 tar"></a>2.12.2 tar</h3><p>另一种方法打包压缩<br />语法：<code>tar [选项] [压缩后文件名] [目录]</code>，参数：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">-c 打包<br>-v 显示详细信息<br>-f 指定文件名<br>-z 打包的同时压缩/解压缩<br>-x 解压缩<br></code></pre></td></tr></table></figure><p>例如：<br /><code>tar -cvf subtemp.tar subtemp</code>：仅打包<br /><code>tar -cvzf subtemp.tar.gz subtemp</code>：打包并压缩，这个是最常见的压缩包<code>.tar.gz</code><br />解压时候把<code>-c</code>换成<code>-x</code>即可<br />注意<code>f</code>字母要写在最后，不能<code>-zcfv</code>等，<code>z</code>跟gz压缩格式有关<br><a name="hT0qj"></a></p><h3 id="2-12-3-zip"><a href="#2-12-3-zip" class="headerlink" title="2.12.3 zip"></a>2.12.3 zip</h3><p>语法：<code>zip [选项] [压缩后文件名] [文件或目录]</code>，参数：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">-r：压缩目录<br></code></pre></td></tr></table></figure><p>解压：<code>unzip [压缩文件名]</code><br><a name="ZpHPk"></a></p><h3 id="2-12-4-bzip2"><a href="#2-12-4-bzip2" class="headerlink" title="2.12.4 bzip2"></a>2.12.4 bzip2</h3><p>gzip的升级版，bzip2<br />语法：<code>bzip2 [选项] [文件]</code>，参数：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">-k：产生压缩文件后保留原文件<br></code></pre></td></tr></table></figure><p>跟tar一起使用<br /><code>tar -cvjf subtemp.tar.bz2 subtemp</code>：打包并压缩<br />把<code>z</code>换成<code>j</code>压缩成<code>.bz2</code>格式的压缩包，解压同理<code>-c</code>换成<code>-x</code><br />解压缩：<br />语法：<code>bunzip2 [压缩文件名]</code></p><p>总结一下（文件后缀只是方便人区分，linux系统不认后缀的）：</p><ol><li><code>.gz</code>是<code>gzip</code>命令压缩产生的，这个只能压缩单个文件</li><li><code>.tar</code>是<code>tar</code>命令产生的，可以打包多个文件，文件夹</li><li><code>.zip</code>是<code>zip</code>命令，其余同<code>tar</code></li><li><code>.bz2</code>是<code>gzip</code>的升级版，除了能加<code>-k</code>参数保留原文件以外，其它没功能加强<br><a name="ENbPj"></a><h1 id="3-文件浏览编辑"><a href="#3-文件浏览编辑" class="headerlink" title="3. 文件浏览编辑"></a>3. 文件浏览编辑</h1><a name="avUZk"></a><h2 id="3-1-touch"><a href="#3-1-touch" class="headerlink" title="3.1 touch"></a>3.1 touch</h2>创建一个文件，关于带空格的文件名，不建议创建<br />如果文件名必须带空格，可以用：<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">touch &quot;pro files&quot;<br></code></pre></td></tr></table></figure>用双引号包含。所有命令中对带空格的文件名，都必须用双引号括住<br><a name="i4sgM"></a><h2 id="3-2-cat"><a href="#3-2-cat" class="headerlink" title="3.2 cat"></a>3.2 cat</h2><code>cat [文件名]</code>：查看文件<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">cat -n：查看行号<br></code></pre></td></tr></table></figure><a name="yLJMK"></a><h2 id="3-3-tac"><a href="#3-3-tac" class="headerlink" title="3.3 tac"></a>3.3 tac</h2><code>tac [文件名]</code>：倒着查看文件<br><a name="JHNnV"></a><h2 id="3-4-more"><a href="#3-4-more" class="headerlink" title="3.4 more"></a>3.4 more</h2>如何浏览大文件？<br /><code>more [文件名]</code>：浏览大文件（分页）<br />技巧：<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">空格，f：翻页查看（下一页）<br>回车：一行一行查看<br>q：退出浏览<br></code></pre></td></tr></table></figure><a name="X8UG3"></a><h2 id="3-5-less"><a href="#3-5-less" class="headerlink" title="3.5 less"></a>3.5 less</h2>相比more，如何搜索，向上翻页？<br /><code>less [文件名]</code>：分页查看大文件<br />在more命令的基础上：<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">PgUp向上翻页<br>/搜索关键字，按键n，跳至下一个关键字<br></code></pre></td></tr></table></figure><a name="w26en"></a><h2 id="3-6-head"><a href="#3-6-head" class="headerlink" title="3.6 head"></a>3.6 head</h2>只想看前几行？<br /><code>head -n xx [文件名]</code><br />默认显示前10行</li></ol><p>反之，想看后几行？<br /><code>tail -n xx [文件名]</code><br />默认10行<br /><code>tail -f</code>可以动态查看<br><a name="dg8P5"></a></p><h2 id="3-7-链接"><a href="#3-7-链接" class="headerlink" title="3.7 链接"></a>3.7 链接</h2><p>软链接：<code>ln -s [原文件] [链接文件]</code><br />硬链接：<code>ln [原文件] [链接文件]</code><br />软链接相当于原文件的快捷方式。权限都是rwx。<br />硬链接相当于原文件的拷贝，但是这两个文件可以同步更新，且这两个文件的i节点相同。硬链接不能跨分区生成<br><a name="UqaWN"></a></p><h2 id="3-8-vim"><a href="#3-8-vim" class="headerlink" title="3.8 vim"></a>3.8 vim</h2><p>强大的文本编辑器<br />语法：<code>vim [文件名]</code><br />编辑模式：<code>i，a，o，I，A，O</code>，退出编辑模式按<code>Esc</code><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/22879930/1653667843601-fe8cdb99-f3dd-4620-b6a2-94489cbee3a3.png#clientId=uadd86808-607a-4&crop=0&crop=0&crop=1&crop=1&from=ui&id=ub4e0530a&margin=%5Bobject%20Object%5D&name=linux_vim1.PNG&originHeight=261&originWidth=300&originalType=binary&ratio=1&rotation=0&showTitle=false&size=46549&status=done&style=none&taskId=u2dca43c0-6b6e-4eae-8e3e-9c44b908efa&title=" alt="linux_vim1.PNG"><br />命令模式：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">:set nu 设置行号<br>:set nonu 取消行号<br>gg 第一行<br>G 最后一行<br>nG 到第n行<br>:n 到第n行<br><span class="hljs-meta prompt_">$ </span><span class="language-bash">移至行尾</span><br>0 移至行首<br></code></pre></td></tr></table></figure><p>复制剪切操作：<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/22879930/1653667870177-376aff1b-03ed-4463-a9ec-37046323f539.png#clientId=uadd86808-607a-4&crop=0&crop=0&crop=1&crop=1&from=ui&id=u1948f644&margin=%5Bobject%20Object%5D&name=linux_vim2.PNG&originHeight=217&originWidth=300&originalType=binary&ratio=1&rotation=0&showTitle=false&size=40708&status=done&style=none&taskId=u1d819c60-2a89-41b9-99a1-55080f3af6a&title=" alt="linux_vim2.PNG"><br />删除操作：<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/22879930/1653667890047-2fdce277-ad26-405a-9719-f7a0c2d540d8.png#clientId=uadd86808-607a-4&crop=0&crop=0&crop=1&crop=1&from=ui&id=u9328d556&margin=%5Bobject%20Object%5D&name=linux_vim3.PNG&originHeight=203&originWidth=300&originalType=binary&ratio=1&rotation=0&showTitle=false&size=41090&status=done&style=none&taskId=u105ceef5-c654-4df6-bb20-4fffb35e026&title=" alt="linux_vim3.PNG"><br />替换字符和取消操作：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">r：替换光标所在的字符<br>R：从光标处开始替换字符，按[Esc]结束<br>u：取消上一步的操作<br></code></pre></td></tr></table></figure><p>搜索和less，more一样：按&#x2F;来搜索，n切换下一个结果，搜索时忽略大小写：<code>:set ic</code><br />替换字符串：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">:%s/oldstr/newstr/g：全文替换<br>:n1,n2s/oldstr/newstr/g：在指定范围内替换<br></code></pre></td></tr></table></figure><p>最后退出vim：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">:w 保存修改<br>:w new_file 另存为指定文件<br>:wq 保存修改并退出<br>:q! 不保存修改退出<br>ZZ 快捷键退出，相当于wq了<br></code></pre></td></tr></table></figure><p>高级vim操作，技巧：<br /><code>:r [文件名]</code>：导入其它文件到当前光标处<br /><code>:![命令名]</code>：在不退出vim的情况下执行命令<br /><code>:r ![命令名]</code>：将执行命令的结果导入当前光标处<br /><code>:n1,n2s/^/#/g</code>：连续注释行<br /><code>:n1,n2s/^#/ /g</code>：把连续注释的行去掉<br /><code>:ab mymail xxxx@abc.com</code>：替换，这样的话，在vim编辑中，只要输入mymail后，都会被替换成指定值<br><a name="cYNkS"></a></p><h1 id="4-权限管理"><a href="#4-权限管理" class="headerlink" title="4. 权限管理"></a>4. 权限管理</h1><p>介绍一下linux中关于权限的操作。在文件管理中谈到，linux权限人分为：所有者，所属组和其他人，对文件的操作分为<code>r</code>读权限，<code>w</code>写权限和<code>x</code>执行权限，这节细说权限和讲如何更改权限。<br />截一张图细说<code>rwx</code>区别：<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/22879930/1653668109789-a3878d43-280a-4d16-808f-4da9de6a96ee.png#clientId=uadd86808-607a-4&crop=0&crop=0&crop=1&crop=1&from=ui&id=u46eaf1ba&margin=%5Bobject%20Object%5D&name=linux_rwx.PNG&originHeight=307&originWidth=500&originalType=binary&ratio=1&rotation=0&showTitle=false&size=77719&status=done&style=none&taskId=u6f352305-17f4-45d7-ab6a-12ac228cff1&title=" alt="linux_rwx.PNG"><br />注意：删除一个文件不需要对此文件有写权限，只需要有对该文件所在的目录有写权限即可<br><a name="hYOvY"></a></p><h2 id="4-1-chmod"><a href="#4-1-chmod" class="headerlink" title="4.1 chmod"></a>4.1 chmod</h2><p><code>chmod [&#123;ugoa&#125;&#123;+-=&#125;&#123;rwx&#125;] [文件或目录]</code>：改变文件或目录权限<br />-R 递归修改</p><p>举例：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">//所有者加上执行权限<br>chmod u+x xxx.txt<br>//所有组加上写权限，其他人减去读权限<br>chmod g+w,o-r xxx.txt<br>//所有组的权限等于rwx<br>chmod g=rwx xxx.txt<br></code></pre></td></tr></table></figure><p>另一种数字的表示方法：<br />r —- 4<br />w —- 2<br />x —- 1</p><p>相互转化：<br />532 &#x3D;&gt; r-x-wx-w-<br />5代表u权限<br />3代表g权限<br />2代表o权限<br><a name="IodTn"></a></p><h2 id="4-2-useradd"><a href="#4-2-useradd" class="headerlink" title="4.2 useradd"></a>4.2 useradd</h2><p><code>useradd xxx</code>：创建用户<br /><code>passwd xxx</code>：更改用户密码<br /><code>groupadd xxx</code>：创建用户组<br><a name="FWfxc"></a></p><h2 id="4-3-chown"><a href="#4-3-chown" class="headerlink" title="4.3 chown"></a>4.3 chown</h2><p><code>chown [用户] [文件或目录]</code>：改变文件的所有者，只有管理员root才能执行<br /><code>chgrp [用户组] [文件或目录]</code>：改变文件的所属组<br><a name="s03B2"></a></p><h2 id="4-4-umask"><a href="#4-4-umask" class="headerlink" title="4.4 umask"></a>4.4 umask</h2><p>如何更改创建文件或文件夹时的默认权限？<br /><code>umask -S</code>：查看默认权限</p><p>注意：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">直接umask显示0022，实际权限计算：首字母0不算，777-022=755就是实际表示的权限<br></code></pre></td></tr></table></figure><p><code>umask 023</code>：更改默认权限为777-023&#x3D;754<br><a name="dfsxT"></a></p><h1 id="5-软件包管理"><a href="#5-软件包管理" class="headerlink" title="5. 软件包管理"></a>5. 软件包管理</h1><p>软件包分为：</p><ol><li>源代码包</li><li>二进制包（RPM包、系统默认包）<br><a name="z6Z92"></a><h2 id="5-1-rpm"><a href="#5-1-rpm" class="headerlink" title="5.1 rpm"></a>5.1 rpm</h2>RPM包的依赖性查询：<code>www.rpmfind.net</code><br />手动安装rpm包的最大坏处：<br />一个包的依赖太多，a-&gt;b-&gt;c树形依赖，或者a-&gt;b-&gt;c-&gt;a环形依赖，使得安装rpm包变得很复杂<br />RPM安装：<br />语法：<code>rpm -ivh [包全名]</code>，参数：<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">-i（install）：安装<br>-v（verbose）：显示详细信息<br>-h（hash）：显示进度<br>--nodeps：不检测依赖性<br></code></pre></td></tr></table></figure>RPM包升级：<br />语法：<code>rpm -Uvh [包全名]</code>，参数：<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">-U：升级<br></code></pre></td></tr></table></figure>RPM包卸载：<br />语法：<code>rpm -e [包名]</code> （这个是包名而不是全名）</li></ol><p>RPM包查询：</p><ol><li>查询是否安装：<code>rpm -q [包名]</code></li><li>查询所有已经安装的RPM包<code>rpm -qa</code>，只看所有包中关于<code>httpd</code>的包：<code>rpm -qa | grep httpd</code></li><li>查询软件包详细信息：<code>rpm -qi [包名]</code>，<code>-i</code>：查询软件信息，<code>-p</code>：查询未安装包信息（指定包全名）</li><li>查询包中文件安装位置：<code>rpm -ql [包名]</code></li><li>查询系统文件属于哪个RPM包：<code>rpm -qf [系统文件名]</code></li><li>查询软件包的依赖性：<code>rpm -qR [包名]</code></li></ol><p>RPM包校验：<br />语法：<code>rmp -V [包名]</code><br />如果没有任何提示，说明这个包自安装以来就没被修改过：<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/22879930/1653668377006-79e66d66-c19f-47f9-8084-410c6b2a4291.png#clientId=uadd86808-607a-4&crop=0&crop=0&crop=1&crop=1&from=ui&id=ub4da80d1&margin=%5Bobject%20Object%5D&name=linux_rpm1.PNG&originHeight=281&originWidth=500&originalType=binary&ratio=1&rotation=0&showTitle=false&size=100679&status=done&style=none&taskId=ueae31618-0bbe-4f8f-b9f0-c3b65959fab&title=" alt="linux_rpm1.PNG"><img src="https://cdn.nlark.com/yuque/0/2022/png/22879930/1653668376979-16ec20c9-ff08-4879-9aa1-5e6e0c7ef8d1.png#clientId=uadd86808-607a-4&crop=0&crop=0&crop=1&crop=1&from=ui&id=uc0d50775&margin=%5Bobject%20Object%5D&name=linux_rpm2.PNG&originHeight=205&originWidth=500&originalType=binary&ratio=1&rotation=0&showTitle=false&size=57191&status=done&style=none&taskId=ub067a614-c1b1-40e4-a26d-36adbab4b90&title=" alt="linux_rpm2.PNG"><br><a name="BfSNz"></a></p><h2 id="5-2-yum"><a href="#5-2-yum" class="headerlink" title="5.2 yum"></a>5.2 yum</h2><p>为了解决rpm包的层层安装，解决依赖性问题，推荐使用<code>yum</code>直接安装</p><p>yum源：<br /><code>vim /etc/yum.repos.d/CentOS-Base.repo</code>：打开默认的配置文件<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/22879930/1653668440368-ec197b40-d89e-487f-9710-f4caa281d482.png#clientId=uadd86808-607a-4&crop=0&crop=0&crop=1&crop=1&from=ui&id=u115aa04c&margin=%5Bobject%20Object%5D&name=linux_yum.PNG&originHeight=224&originWidth=500&originalType=binary&ratio=1&rotation=0&showTitle=false&size=99043&status=done&style=none&taskId=ued1cc0fd-3a26-4271-909e-7d9e1a33617&title=" alt="linux_yum.PNG"><br />常用的yum命令：<br /><code>yum list</code>：查询所有可用的软件包列表<br /><code>yum search [包名]</code>：搜索服务器上所有和关键字相关的包<br /><code>yum -y install [包名]</code>：安装软件包<br /><code>-y</code>：自动回答yes</p><p>升级软件包（如果不加包名会升级所有软件包，包括linux内核，会导致服务器崩溃，慎用）：<br /><code>yum -y update [包名]</code></p><p>卸载软件包（和升级一样，小心使用，一定要写包名；慎用，卸载可能删掉某些公用包导致其它软件无法正常使用）：<br /><code>yum -y remove [包名]</code><br /><code>yum grouplist</code>：列出所有可用的软件组<br /><code>yum groupinstall [软件组名]</code>：安装软件组<br /><code>yum groupremove [软件组名]</code>：卸载指定软件组<br><a name="uQads"></a></p><h2 id="5-3-安装源码包"><a href="#5-3-安装源码包" class="headerlink" title="5.3 安装源码包"></a>5.3 安装源码包</h2><p>源码包保存位置：<code>/usr/local/src</code><br />软件安装位置：<code>/usr/local/</code></p><p>查看这个文件夹占用多大空间<br /><code>du -sh [目录名]</code></p><p>安装源码包步骤（以安装apache为例）：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">准备：下载源码包，解压，进入解压目录（INSTALL文件有安装步骤和提示）<br>命令：<br>./configure --prefix=/usr/local/apache2（定义安装目录）<br>作用：<br>1.定义需要的功能选项<br>2.检测环境是否符合安装需求<br>3.把定义好的功能选项和信息写入Makefile文件，用于后续的编译<br></code></pre></td></tr></table></figure><p>然后执行<code>make</code>命令编译（前提linux已安装<code>gcc</code>，如果make失败可以用<code>make clean</code>来清除编译产生的临时数据）<br />最后<code>make install</code>编译安装<br />源码包的卸载直接删除安装后的文件夹即可，例如直接<code>rm -rf /usr/local/apache2</code>就可以完成卸载<br />有的软件包有自动安装脚本，直接运行<code>./setup.sh</code>即可完成安装<br />如果是下载的已经编译好的二进制文件，只需要解压后即可使用。例如java环境等，但为了方便操作，一般需要配置环境变量或者生成软连接到<code>/usr/local/bin/</code>目录下<br><a name="igwxZ"></a></p><h3 id="5-3-1-启动服务"><a href="#5-3-1-启动服务" class="headerlink" title="5.3.1 启动服务"></a>5.3.1 启动服务</h3><p>语法：<code>[绝对路径] start</code><br />例如<code>/etc/rc.d/init.d/httpd start</code>，这种启动方式适用于自己手动安装的软件包<br />另一种启动方式：<code>service httpd start</code>，适用于用rpm包安装的软件和yum安装的软件<br><a name="tQQIO"></a></p><h1 id="6-网络管理"><a href="#6-网络管理" class="headerlink" title="6. 网络管理"></a>6. 网络管理</h1><p><a name="ITEyr"></a></p><h2 id="6-1-who"><a href="#6-1-who" class="headerlink" title="6.1 who"></a>6.1 who</h2><p>查看用户的登录信息<br><a name="nahYi"></a></p><h2 id="6-2-w"><a href="#6-2-w" class="headerlink" title="6.2 w"></a>6.2 w</h2><p>和<code>who</code>一样，显示结果中：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">tty：代表本地登录<br>pts：代表远程终端登录<br></code></pre></td></tr></table></figure><p><a name="jruNo"></a></p><h2 id="6-3-write"><a href="#6-3-write" class="headerlink" title="6.3 write"></a>6.3 write</h2><p>简单的即时通信，给用户发信息，以<code>Ctrl+D</code>保存结束<br /><code>write [用户名]</code>：用户不在登录状态是收不到的，可以用<code>w</code>命令，看看哪些用户在登录状态<br><a name="tBNd4"></a></p><h2 id="6-4-wall"><a href="#6-4-wall" class="headerlink" title="6.4 wall"></a>6.4 wall</h2><p>如何群发登录用户？<br /><code>wall [消息内容]</code>：所有的登录用户都可以收到<br><a name="KjfGc"></a></p><h2 id="6-5-ping"><a href="#6-5-ping" class="headerlink" title="6.5 ping"></a>6.5 ping</h2><p>探测消息，网络是否通？<br />语法：<code>ping [选项] [IP地址]</code>，参数：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">-c：指定发送次数<br></code></pre></td></tr></table></figure><p>例如：<code>ping -c3 127.0.0.1</code><br><a name="He4iI"></a></p><h2 id="6-6-ifconfig"><a href="#6-6-ifconfig" class="headerlink" title="6.6 ifconfig"></a>6.6 ifconfig</h2><p>查看网卡信息，windows里面叫<code>ipconfig</code>，eth0代表本地的真实网卡，主要是查看机器的IP地址<br><a name="SJr3O"></a></p><h2 id="6-7-mail"><a href="#6-7-mail" class="headerlink" title="6.7 mail"></a>6.7 mail</h2><p>邮件命令，向某一个用户发送邮件<br />语法：<code>mail [用户名]</code><br />查看邮件：<br />mail即可，help查看支持的命令格式，输入数字代表查看第几封邮件，参数：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">h：列出所有邮件<br>d [数字]：删除某封邮件<br>q：退出<br></code></pre></td></tr></table></figure><p><a name="uFeLf"></a></p><h2 id="6-8-last"><a href="#6-8-last" class="headerlink" title="6.8 last"></a>6.8 last</h2><p>列出目前与过去用户登入系统的信息，重启系统信息等<br><a name="Hw84W"></a></p><h2 id="6-9-lastlog"><a href="#6-9-lastlog" class="headerlink" title="6.9 lastlog"></a>6.9 lastlog</h2><p>列出用户最后一次登录系统的信息<br><a name="V5trY"></a></p><h2 id="6-10-traceroute"><a href="#6-10-traceroute" class="headerlink" title="6.10 traceroute"></a>6.10 traceroute</h2><p><code>非常重要</code>的一个命令，显示数据包到主机间的路径<br />例如：<code>traceroute www.baidu.com</code><br />如果网断了，可以用这个命令查看在哪一个IP节点丢包的<br><a name="J3P7B"></a></p><h2 id="6-11-netstat"><a href="#6-11-netstat" class="headerlink" title="6.11 netstat"></a>6.11 netstat</h2><p>显示网络相关信息<br />语法：<code>netstat [选项]</code>，参数：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">-t：TCP协议<br>-u：UDP协议<br>-l：监听<br>-r：路由<br>-n：显示IP地址和端口号<br></code></pre></td></tr></table></figure><p>例子：<br /><code>netstat -tlun</code>：查看本机监听的端口（可以查看本机开了哪些服务）<br /><code>netstat -an</code>：查看本机所有的网络连接<br /><code>netstat -rm</code>：查看本机路由表（查询本机网关）<br><a name="QjK7o"></a></p><h2 id="6-12-setup"><a href="#6-12-setup" class="headerlink" title="6.12 setup"></a>6.12 setup</h2><p>调出详细配置页面（红帽系列的系统才有这个命令）<br />配置完后重启网络服务：<code>service network restart</code><br><a name="y0R94"></a></p><h2 id="6-13-mount"><a href="#6-13-mount" class="headerlink" title="6.13 mount"></a>6.13 mount</h2><p>挂载光盘，卸载光盘<br />语法：<code>mount [-t iso9660] [设备文件名] [挂载点]</code><br />例子（&#x2F;dev是放设备的目录，&#x2F;mnt是挂载目录，在里面新建一个自己的挂载点）：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">mount -t iso9660 /dev/sr0 /mnt/cdrom<br>mount /dev/sr0 /mnt/cdrom，也行<br></code></pre></td></tr></table></figure><p>卸载光盘：<code>unmount /dev/sr0</code>，或者<code>unmount /mnt/cdrom</code><br />注意卸载时当前目录不能为挂载目录，否则会提示busy<br><a name="Lwh8W"></a></p><h2 id="6-14-shutdown"><a href="#6-14-shutdown" class="headerlink" title="6.14 shutdown"></a>6.14 shutdown</h2><p>关机重启命令（推荐shutdown，安全性高）<br />语法：<code>shutdown [选项] [时间]</code>，参数：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">-c：取消前一个关机命令<br>-h：关机<br>-r：重启<br></code></pre></td></tr></table></figure><p>其它关机命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">halt<br>poweroff<br>init 0<br>其它重启命令<br>reboot<br>init 6<br></code></pre></td></tr></table></figure><p>启动选项，打开配置文件<code>cat /etc/inittab</code>，小知识：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">0：关机<br>1：单用户<br>2：不完全多用户，不含NFS文件共享服务<br>3：完全多用户（一般服务器是这个）<br>4：未分配<br>5：图形界面（一般个人机，虚拟机）<br>6：重启<br></code></pre></td></tr></table></figure><p><a name="RaD9w"></a></p><h2 id="6-15-runlevel"><a href="#6-15-runlevel" class="headerlink" title="6.15 runlevel"></a>6.15 runlevel</h2><p>查询当前运行级别<br><a name="DmXDJ"></a></p><h2 id="6-16-logout"><a href="#6-16-logout" class="headerlink" title="6.16 logout"></a>6.16 logout</h2><p>退出登录命令（操作完服务器记得退出）</p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>30分钟搭建个人博客</title>
    <link href="/2017/07/28/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/30%E5%88%86%E9%92%9F%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2017/07/28/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/30%E5%88%86%E9%92%9F%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><p><a name="ctaL4"></a></p><h1 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h1><p>一个不需要购买服务器的博客网站：Hexo<br />基础：</p><ol><li>玩过 github，至少上传过一个自己的项目&#x2F;工程</li><li>有一定的 node.js 基础，至少安装过 node 环境，了解 npm 命令<br><a name="XHqcf"></a></li></ol><h1 id="2-环境准备"><a href="#2-环境准备" class="headerlink" title="2. 环境准备"></a>2. 环境准备</h1><p><a name="UUPjm"></a></p><h2 id="2-1-NodeJs"><a href="#2-1-NodeJs" class="headerlink" title="2.1 NodeJs"></a>2.1 NodeJs</h2><p><a href="http://nodejs.cn/">官方网站</a>，下载安装即可<br />常用的命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">查看是否安装好了，查看版本信息</span><br>node -v<br><span class="hljs-meta prompt_"># </span><span class="language-bash">本地安装依赖</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">安装到项目的 node_modules 文件夹中，具体依赖会写到 package.json 中</span><br>npm install xxx --save<br><span class="hljs-meta prompt_"># </span><span class="language-bash">所有的依赖包从 package.json 中读取并安装好，自动生成 node_modules 文件夹</span><br>npm install<br><span class="hljs-meta prompt_"># </span><span class="language-bash">安装一个依赖（全局）</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">这个包会安装到`C:\Users\xx\AppData\Roaming\npm\node_modules`中，对所有的node项目都有效</span><br>npm install xxx -g<br></code></pre></td></tr></table></figure><p>为了安装依赖更快，设置仓库：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm config set registry https://registry.npm.taobao.org<br></code></pre></td></tr></table></figure><p>此后会发现 <code>C:\Users\xxx</code>（本人Win10）多了 <code>.npmrc</code>文件，这就是你的 npm 配置文件<br><a name="ku79W"></a></p><h2 id="2-2-Git"><a href="#2-2-Git" class="headerlink" title="2.2 Git"></a>2.2 Git</h2><p><a href="https://git-scm.com/">官方网站</a><br /><a href="https://www.liaoxuefeng.com/wiki/896043488029600/896067074338496">安装教程</a><br />设置个人信息：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">git config --global user.name &quot;Your Name&quot;<br>git config --global user.email &quot;email@example.com&quot;<br></code></pre></td></tr></table></figure><p>生成公钥：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">执行命令，一直按回车，生成公钥</span><br>ssh-keygen -t rsa -C &quot;邮箱地址&quot;<br></code></pre></td></tr></table></figure><p>生成后查看目录：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">C:\Users\&#123;你的电脑&#125;\.ssh<br></code></pre></td></tr></table></figure><p>有 id_rsa、id_rsa.pub 文件。<code>C:\Users\&#123;你的电脑&#125;</code>目录下有 <code>.gitconfig</code>配置文件<br />需要将公钥拷贝到你的 github 上，否则无法上传项目<br><a name="DHaDF"></a></p><h1 id="3-开始安装"><a href="#3-开始安装" class="headerlink" title="3. 开始安装"></a>3. 开始安装</h1><p><a name="o37GZ"></a></p><h2 id="3-1-生成博客项目"><a href="#3-1-生成博客项目" class="headerlink" title="3.1 生成博客项目"></a>3.1 生成博客项目</h2><ol><li><p>全局安装 Hexo</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install -g hexo<br></code></pre></td></tr></table></figure></li><li><p>进入一个空文件夹，初始化项目</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo init<br></code></pre></td></tr></table></figure><p>可以看到你的博客项目了</p></li><li><p>安装依赖</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">初始化所有依赖</span><br>npm install<br><span class="hljs-meta prompt_"># </span><span class="language-bash">没有这个依赖无法推送博客到 github，需要安装</span><br>npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure></li><li><p>本地跑起来看看</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">生成静态文件</span><br>hexo generate<br><span class="hljs-meta prompt_"># </span><span class="language-bash">启动本地服务</span><br>hexo server<br></code></pre></td></tr></table></figure><p>在浏览器中输入 localhost:4000 就可以看到本地的博客了</p></li><li><p>把个人博客推送到 github 上，让其他人访问</p></li></ol><p>在自己的 github 上新建仓库：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">zhang0chao0.github.io  // zhang0chao0 换成 yourname<br></code></pre></td></tr></table></figure><p>编辑博客配置文件，在你的 Hexo 根目录下有一个 _config_yml 文件，就是站点的配置文件，在最后加上：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repository:</span> <span class="hljs-string">git@github.com:zhang0chao0/zhang0chao0.github.io.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">master</span><br></code></pre></td></tr></table></figure><p>zhang0chao0 换成 yourname 即可<br />开始上传博客：<br />在hexo根目录下，用指令发布：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo deploy</span><br></code></pre></td></tr></table></figure><p>在浏览器输入：</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lua">yourname.github.<span class="hljs-built_in">io</span><br></code></pre></td></tr></table></figure><p>就能看到你自己的的博客了<br><a name="xDa3y"></a></p><h2 id="3-2-开始写第一篇文章"><a href="#3-2-开始写第一篇文章" class="headerlink" title="3.2 开始写第一篇文章"></a>3.2 开始写第一篇文章</h2><p><a href="https://www.zybuluo.com/mdeditor">简单的学习一下MarkDown语法</a></p><ol><li><p>新建第一篇文章</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">hexo</span> <span class="hljs-string">new</span> <span class="hljs-string">&quot;第一篇文章&quot;</span><br></code></pre></td></tr></table></figure><p>可以看到<code>source/_posts</code>目录下已经有了 md 文件<br />给文档归类和增加标签：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">title:</span> <span class="hljs-string">第一篇文章</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2017-07-26 10:02:58</span><br><span class="hljs-attr">categories:</span> <span class="hljs-string">Java</span><br><span class="hljs-attr">tags:</span> [<span class="hljs-string">Think</span> <span class="hljs-string">in</span> <span class="hljs-string">Java</span>]<br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure></li><li><p>发表自己的文章到 github</p></li></ol><p>命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">先清空上次生成的静态文件</span><br>hexo clean<br><span class="hljs-meta prompt_"># </span><span class="language-bash">生成新的静态文件</span><br>hexo generate<br><span class="hljs-meta prompt_"># </span><span class="language-bash">推送到 github</span><br>hexo deploy<br></code></pre></td></tr></table></figure><p>发布前想预览下，可以用<code>hexo server</code>在本地预览<br />常用的命名汇总：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo new &quot;postName&quot; # 新建文章<br>hexo new page &quot;pageName&quot; # 新建页面<br>hexo generate # 生成静态页面至 public 目录<br>hexo server # 开启预览访问端口（默认端口4000，&#x27;ctrl + c&#x27;关闭server）<br>hexo deploy # 将 .deploy 目录部署到 GitHub<br>hexo help  # 查看帮助<br>hexo version  #查看 Hexo 的版本<br></code></pre></td></tr></table></figure><p><a name="Fr5tM"></a></p><h2 id="3-3-让博客更美观"><a href="#3-3-让博客更美观" class="headerlink" title="3.3 让博客更美观"></a>3.3 让博客更美观</h2><p>主题推荐<br><a name="Qnurt"></a></p><h3 id="3-3-1-Hexo-Fluid（正在使用）"><a href="#3-3-1-Hexo-Fluid（正在使用）" class="headerlink" title="3.3.1 Hexo-Fluid（正在使用）"></a>3.3.1 Hexo-Fluid（正在使用）</h3><p><a href="https://hexo.fluid-dev.com/docs/start/">官方用户手册</a><br><a name="MJr7o"></a></p><h3 id="3-3-2-Next"><a href="#3-3-2-Next" class="headerlink" title="3.3.2 Next"></a>3.3.2 Next</h3><p><a href="http://theme-next.iissnan.com/getting-started.html">Next用户手册</a>，一款非常简洁的主题<br /><a href="https://segmentfault.com/a/1190000009544924">好文，让Next主题更炫酷</a><br><a name="oiQWb"></a></p><h2 id="3-4-替换域名"><a href="#3-4-替换域名" class="headerlink" title="3.4 替换域名"></a>3.4 替换域名</h2><p>替换 yourname.github.io 为自己的域名，在有域名的基础上，配置解析规则即可：<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/22879930/1653408295492-70f68a4f-003f-40c1-b182-2db814f5256a.png#clientId=u64112c0f-2f74-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=247&id=u9ff73f18&margin=%5Bobject%20Object%5D&name=zhangchaozc.PNG&originHeight=371&originWidth=1073&originalType=binary&ratio=1&rotation=0&showTitle=false&size=36350&status=done&style=none&taskId=u840c0080-617f-430f-963a-fa0dae64707&title=&width=715.3333333333334" alt="zhangchaozc.PNG"><br />同时在博客项目 <code>source</code>目录下新建文件：CNAMA，内容为：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">zhangchaozc.cn<br></code></pre></td></tr></table></figure><p>重新部署即可<br><a name="s4bup"></a></p><h1 id="4-优化项目"><a href="#4-优化项目" class="headerlink" title="4. 优化项目"></a>4. 优化项目</h1><p><a name="p18Pa"></a></p><h2 id="4-1-访问速度"><a href="#4-1-访问速度" class="headerlink" title="4.1 访问速度"></a>4.1 访问速度</h2><p>Hexo-Fluid 博客中有大量的图片，影响加载，且 github 图片访问速度堪忧<br />图片工具：<a href="https://www.imgurl.org/vip/manage/upload">ImgURL图床</a><br />将图片上传到图床，获取图片链接，进行配置，例如：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">---------------------------</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">首页</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Home Page</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">---------------------------</span><br>index:<br><span class="hljs-meta prompt_">  # </span><span class="language-bash">首页 Banner 头图，可以是相对路径或绝对路径，以下相同</span><br><span class="hljs-meta prompt_">  # </span><span class="language-bash">Path of Banner image, can be a relative path or an absolute path, the same on other pages</span><br><span class="hljs-meta prompt_">  # </span><span class="language-bash">pic 1</span><br>  banner_img: https://s3.bmp.ovh/imgs/2022/05/24/09aca3dfddf7eb4a.jpg<br></code></pre></td></tr></table></figure><p>替换掉原有的配置</p>]]></content>
    
    
    <categories>
      
      <category>博客搭建</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
